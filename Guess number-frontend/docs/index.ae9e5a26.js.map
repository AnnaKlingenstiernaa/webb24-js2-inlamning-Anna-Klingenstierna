{"mappings":"AEAA,MAAM,EAAS,mCAEf,SAAS,IACL,MAAM,GACD,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IACF,IAAM,EAAgB,SAAS,aAAa,CAAC,iBAC7C,CAAA,EAAc,SAAS,CAAG,GAG1B,EAAW,OAAO,CAAC,AAAA,IACf,IAAM,EAAK,SAAS,aAAa,CAAC,KAClC,CAAA,EAAG,WAAW,CAAG,CAAC,EAAE,EAAM,IAAI,CAAC,EAAE,EAAE,EAAM,KAAK,CAAC,CAAC,CAChD,EAAc,WAAW,CAAC,EAC9B,EACJ,EACR,CAGA,eAAe,EAAgB,CAAU,CAAE,CAAa,EACpD,MAAM,EAAS,CACX,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,CAAE,KAAM,EAAY,MAAO,CAAc,EAClE,GACC,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IACF,QAAQ,GAAG,CAAC,oBAAqB,GACjC,GACJ,EAEJ,CD/BA,IAAI,EAAgB,EAChB,EAAgB,IAOpB,SAAS,IACL,SAAS,aAAa,CAAC,iBAAiB,SAAS,CAAG,CAAC,eAAY,EAAE,EAAc,CAAC,AACtF,CA0EA,SAAS,IACL,OAAO,KAAK,IAAI,CAAC,AAAgB,EAAhB,KAAK,MAAM,GAChC,CAjFA,AADa,SAAS,aAAa,CAAC,cAC/B,gBAAgB,CAAC,SAYtB,SAAqB,CAAK,EACtB,EAAM,cAAc,GACpB,IAAM,EAAc,SAAS,aAAa,CAAC,SAAS,KAAK,CACnD,EAAW,SAAS,aAAa,CAAC,UAEpC,CAAA,GAAe,GACf,IACA,IACA,EAAS,SAAS,CAAG,mBACrB,EAAgB,MAEhB,EAAS,SAAS,CAAG,+BACrB,IACA,AAKR,WACI,IAAM,EAAU,SAAS,aAAa,CAAC,WACvC,CAAA,EAAQ,SAAS,CAAG,GAGpB,AAoBJ,WACI,IAAM,EAAU,SAAS,aAAa,CAAC,YAEjC,EAAmB,SAAS,aAAa,CAAC,IAChD,CAAA,EAAiB,SAAS,CAAG,4EAE7B,IAAM,EAAW,SAAS,aAAa,CAAC,QAGlC,EAAkB,SAAS,aAAa,CAAC,QAC/C,CAAA,EAAgB,IAAI,CAAG,OACvB,EAAgB,WAAW,CAAG,iBAE9B,IAAM,EAAa,SAAS,aAAa,CAAC,QAC1C,CAAA,EAAW,IAAI,CAAG,SAGlB,EAAS,WAAW,CAAC,GACrB,EAAS,WAAW,CAAC,GACrB,EAAQ,WAAW,CAAC,GACpB,EAAQ,WAAW,CAAC,EACxB,IArCI,AADiB,SAAS,aAAa,CAAC,QAC/B,gBAAgB,CAAC,SAAU,AAAC,IACjC,EAAM,cAAc,GAIpB,AAAA,EAHmB,SAAS,aAAa,CAAC,SAAS,KAAK,CAG5B,GAG5B,EAAQ,SAAS,CAAG,GACpB,EAAgB,EAChB,IACA,SAAS,aAAa,CAAC,WAAW,SAAS,CAAG,EAClD,EACJ,IAzBA,GArBA,IAEA,AAAA","sources":["<anon>","src/modules/main.js","src/modules/gui.js"],"sourcesContent":["const $b429452315626fb0$var$baseUrl = \"http://localhost:3000/highscores\";\nfunction $b429452315626fb0$export$1642b8a0bf9a6c35() {\n    fetch($b429452315626fb0$var$baseUrl) // GET-förfrågan till backend för att hämta highscore-listan\n    .then((response)=>response.json()).then((highscores)=>{\n        const highScoreList = document.querySelector(\"#highScoreList\"); // Hämta ol-elementet\n        highScoreList.innerHTML = \"\";\n        // Fyll listan med namn och poäng\n        highscores.forEach((score)=>{\n            const li = document.createElement(\"li\");\n            li.textContent = `${score.name}: ${score.score}`; // Visar namn och poäng\n            highScoreList.appendChild(li);\n        });\n    });\n}\n// Funktion för att skicka highscore till backend\nasync function $b429452315626fb0$export$e207fb3f2a6c58c2(playerName, playersPoints) {\n    fetch($b429452315626fb0$var$baseUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            name: playerName,\n            score: playersPoints\n        }) // Skickar namn och poäng som JSON\n    }).then((response)=>response.json()) // Konverterar svaret till JSON\n    .then((data)=>{\n        console.log(\"Highscore sparat:\", data);\n        $b429452315626fb0$export$1642b8a0bf9a6c35(); // Anropa fetchHighscores för att uppdatera listan\n    });\n}\n\n\nlet $0b88ce7c6c5c797a$var$playersPoints = 0;\nlet $0b88ce7c6c5c797a$var$correctNumber = $0b88ce7c6c5c797a$var$generateNewNumber();\n// Hämta formet där användaren gissar\nconst $0b88ce7c6c5c797a$var$form = document.querySelector(\"#guessForm\");\n$0b88ce7c6c5c797a$var$form.addEventListener(\"submit\", $0b88ce7c6c5c797a$var$handleGuess); // Event lyssnar på submit från knappen\nfunction $0b88ce7c6c5c797a$var$updateScore() {\n    document.querySelector(\"#pointcounter\").innerText = `Dina po\\xe4ng: ${$0b88ce7c6c5c797a$var$playersPoints}`;\n}\n$0b88ce7c6c5c797a$var$updateScore(); // Se till att poängen visas, även om den är 0\n(0, $b429452315626fb0$export$1642b8a0bf9a6c35)(); //Hämta highscore listan när sidan laddas\n// Hanterar användarens gissning\nfunction $0b88ce7c6c5c797a$var$handleGuess(event) {\n    event.preventDefault();\n    const numberGuess = document.querySelector(\"input\").value;\n    const resultEl = document.querySelector(\"#result\");\n    if (numberGuess == $0b88ce7c6c5c797a$var$correctNumber) {\n        $0b88ce7c6c5c797a$var$playersPoints++; // Öka spelarens poäng\n        $0b88ce7c6c5c797a$var$updateScore(); // Uppdatera poängvisningen\n        resultEl.innerText = \"Du svarade r\\xe4tt!\";\n        $0b88ce7c6c5c797a$var$correctNumber = $0b88ce7c6c5c797a$var$generateNewNumber(); // Datorn \"tänker\" på ett nytt nummer\n    } else {\n        resultEl.innerText = \"Du svarade fel, f\\xf6rs\\xf6k igen!\";\n        $0b88ce7c6c5c797a$var$updateScore(); // Uppdatera poängvisningen\n        $0b88ce7c6c5c797a$var$wrongAnswer(); // Hantera när användaren svarar fel\n    }\n}\n// Hanterar vad som händer vid fel svar\nfunction $0b88ce7c6c5c797a$var$wrongAnswer() {\n    const nameDiv = document.querySelector(\"#namediv\");\n    nameDiv.innerHTML = \"\"; // Töm div för nytt formulär\n    // Visa formulär för att ange namn\n    $0b88ce7c6c5c797a$var$applyName();\n    // Event listener för att skicka highscore\n    const nameForm = document.querySelector(\"form\");\n    nameForm.addEventListener(\"submit\", (event)=>{\n        event.preventDefault();\n        const playerName = document.querySelector(\"input\").value; // Hämta spelarens namn\n        // Skicka spelarens namn och poäng till backend\n        (0, $b429452315626fb0$export$e207fb3f2a6c58c2)(playerName, $0b88ce7c6c5c797a$var$playersPoints);\n        // Återställ spelet efter inskickning\n        nameDiv.innerHTML = \"\"; // Döljer formuläret\n        $0b88ce7c6c5c797a$var$playersPoints = 0; // Nollställer poängen\n        $0b88ce7c6c5c797a$var$updateScore(); // Uppdaterar poängen till 0\n        document.querySelector(\"#result\").innerText = \"\"; // Töm resultatmeddelandet\n    });\n}\n// Visar namnformuläret efter fel svar\nfunction $0b88ce7c6c5c797a$var$applyName() {\n    const nameDiv = document.querySelector(\"#namediv\");\n    const formInstructions = document.createElement(\"p\");\n    formInstructions.innerText = \"Bra gissat! Ange ditt namn f\\xf6r att se om du platsar i v\\xe5r highscore lista\";\n    const nameForm = document.createElement(\"form\");\n    const playerNameInput = document.createElement(\"input\");\n    playerNameInput.type = \"text\";\n    playerNameInput.placeholder = \"Ange ditt namn\";\n    const submitName = document.createElement(\"input\");\n    submitName.type = \"submit\";\n    nameForm.appendChild(playerNameInput);\n    nameForm.appendChild(submitName);\n    nameDiv.appendChild(formInstructions);\n    nameDiv.appendChild(nameForm);\n}\nfunction $0b88ce7c6c5c797a$var$generateNewNumber() {\n    return Math.ceil(Math.random() * 3);\n}\n\n\n//# sourceMappingURL=index.ae9e5a26.js.map\n","import { fetchHighscores,submitHighScore, } from './gui.js';\n\nlet playersPoints = 0; \nlet correctNumber = generateNewNumber(); \n\n// Hämta formet där användaren gissar\nconst form = document.querySelector('#guessForm'); \nform.addEventListener('submit', handleGuess);  // Event lyssnar på submit från knappen\n\n\nfunction updateScore() { \n    document.querySelector('#pointcounter').innerText = `Dina poäng: ${playersPoints}`;\n}\nupdateScore(); // Se till att poängen visas, även om den är 0\n\nfetchHighscores(); //Hämta highscore listan när sidan laddas\n\n\n// Hanterar användarens gissning\nfunction handleGuess(event) {\n    event.preventDefault();\n    const numberGuess = document.querySelector('input').value; \n    const resultEl = document.querySelector('#result');\n\n    if (numberGuess == correctNumber) { \n        playersPoints++; // Öka spelarens poäng\n        updateScore(); // Uppdatera poängvisningen\n        resultEl.innerText = \"Du svarade rätt!\";\n        correctNumber = generateNewNumber(); // Datorn \"tänker\" på ett nytt nummer\n    } else {\n        resultEl.innerText = \"Du svarade fel, försök igen!\";\n        updateScore(); // Uppdatera poängvisningen\n        wrongAnswer(); // Hantera när användaren svarar fel\n    }\n}\n\n// Hanterar vad som händer vid fel svar\nfunction wrongAnswer() {\n    const nameDiv = document.querySelector('#namediv');\n    nameDiv.innerHTML = ''; // Töm div för nytt formulär\n\n    // Visa formulär för att ange namn\n    applyName();\n\n    // Event listener för att skicka highscore\n    const nameForm = document.querySelector('form');\n    nameForm.addEventListener('submit', (event) => {\n        event.preventDefault();\n        const playerName = document.querySelector('input').value; // Hämta spelarens namn\n\n        // Skicka spelarens namn och poäng till backend\n        submitHighScore(playerName, playersPoints);\n\n        // Återställ spelet efter inskickning\n        nameDiv.innerHTML = ''; // Döljer formuläret\n        playersPoints = 0; // Nollställer poängen\n        updateScore(); // Uppdaterar poängen till 0\n        document.querySelector('#result').innerText = ''; // Töm resultatmeddelandet\n    });\n}\n\n// Visar namnformuläret efter fel svar\nfunction applyName() {\n    const nameDiv = document.querySelector('#namediv');\n\n    const formInstructions = document.createElement('p');\n    formInstructions.innerText = 'Bra gissat! Ange ditt namn för att se om du platsar i vår highscore lista';\n\n    const nameForm = document.createElement('form'); \n\n   \n    const playerNameInput = document.createElement('input');\n    playerNameInput.type = 'text';\n    playerNameInput.placeholder = 'Ange ditt namn';\n\n    const submitName = document.createElement('input');\n    submitName.type = 'submit';\n\n\n    nameForm.appendChild(playerNameInput);\n    nameForm.appendChild(submitName);\n    nameDiv.appendChild(formInstructions);\n    nameDiv.appendChild(nameForm);\n}\n\n \nfunction generateNewNumber() {\n    return Math.ceil(Math.random() * 3);\n}\n","const baseUrl= 'http://localhost:3000/highscores'\n\nfunction fetchHighscores() {\n    fetch(baseUrl) // GET-förfrågan till backend för att hämta highscore-listan\n        .then(response => response.json()) \n        .then(highscores => {\n            const highScoreList = document.querySelector('#highScoreList'); // Hämta ol-elementet\n            highScoreList.innerHTML = ''; \n\n            // Fyll listan med namn och poäng\n            highscores.forEach(score => {\n                const li = document.createElement('li');\n                li.textContent = `${score.name}: ${score.score}`; // Visar namn och poäng\n                highScoreList.appendChild(li);\n            });\n        });\n}\n\n// Funktion för att skicka highscore till backend\nasync function submitHighScore(playerName, playersPoints) {\n    fetch(baseUrl, { // Använd rätt endpoint\n        method: 'POST', \n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name: playerName, score: playersPoints }) // Skickar namn och poäng som JSON\n    })\n    .then(response => response.json()) // Konverterar svaret till JSON\n    .then(data => {\n        console.log('Highscore sparat:', data); \n        fetchHighscores(); // Anropa fetchHighscores för att uppdatera listan\n    })\n   \n}\n\nexport{fetchHighscores, submitHighScore};\n\n"],"names":["$b429452315626fb0$var$baseUrl","$b429452315626fb0$export$1642b8a0bf9a6c35","fetch","then","response","json","highscores","highScoreList","document","querySelector","innerHTML","forEach","score","li","createElement","textContent","name","appendChild","$b429452315626fb0$export$e207fb3f2a6c58c2","playerName","playersPoints","method","headers","body","JSON","stringify","data","console","log","$0b88ce7c6c5c797a$var$playersPoints","$0b88ce7c6c5c797a$var$correctNumber","$0b88ce7c6c5c797a$var$generateNewNumber","$0b88ce7c6c5c797a$var$updateScore","innerText","Math","ceil","random","$0b88ce7c6c5c797a$var$form","addEventListener","event","preventDefault","numberGuess","value","resultEl","$0b88ce7c6c5c797a$var$wrongAnswer","nameDiv","$0b88ce7c6c5c797a$var$applyName","formInstructions","nameForm","playerNameInput","type","placeholder","submitName"],"version":3,"file":"index.ae9e5a26.js.map"}